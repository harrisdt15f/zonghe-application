{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Animation/assets\\Script\\Animation\\RankEffect.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Animation","sourcesContent":["const {ccclass, property} = cc._decorator;\n@ccclass\nexport default class RankEffect extends cc.Component {\n    // 当前帧的图片\n    @property(cc.Sprite)\n    sprite: cc.Sprite = null;\n    /** 播放动画所需要的图集 */\n    @property([cc.SpriteFrame])\n    spriteFrameList: cc.SpriteFrame[] = [];\n    /** 播放动画所需要的间隔时间 */\n    @property(cc.Integer)\n    duration: number = 0.2;\n    /** 是否循环播放 */\n    @property(cc.Boolean)\n    is_loop: boolean = false;\n    /** 是否加载的时候播放 */\n   // @property(cc.Boolean)\n   // is_play_onload: boolean = false;\n    /** 播放完成后是否消耗 */\n    @property(cc.Boolean)\n    is_destroy: boolean = false;\n    /** 延迟多少秒播放动画 */\n    @property(cc.Integer)\n    timeDelay: number = 0;\n    /** 如果是重复播放动画多少秒后在播放 */\n    @property(cc.Integer)\n    playTimeEndDelay: number = 0;\n    played_time = 0;\n    is_playing = false;\n    _currentDelay = false;\n    _currentPlayDelay = false\n    onEnable () {\n      //  if (this.is_play_onload) {\n            this.play();\n      //  }\n    }\n    play() {\n        if (this.is_loop) {\n            this.play_loop();\n        } else {\n            this.play_once();\n        }\n    }\n    play_once() {\n        if (this.spriteFrameList.length <= 1) {\n            return;\n        }\n        if (this.timeDelay > 0) {\n            this._currentDelay = true;\n            this.scheduleOnce(this._updateTimeDelayState.bind(this), this.timeDelay);\n        }\n        this.played_time = 0;\n        this.is_playing = true;\n        this.is_loop = false;\n    }\n    play_loop() {\n        if (this.spriteFrameList.length <= 1) {\n            return;\n        }\n        if (this.timeDelay > 0) {\n            this._currentDelay = true;\n            this.scheduleOnce(this._updateTimeDelayState.bind(this), this.timeDelay);\n        }\n        this.played_time = 0;\n        this.is_playing = true;\n        this.is_loop = true;\n    }\n    stop() {\n        this.is_playing = false;\n        this.played_time = 0;\n    }\n    _updateTimeDelayState() {\n        this._currentDelay  = false;\n    }\n    _updatePlayTimeDelayState() {\n        this._currentPlayDelay = false;\n    }\n    update (dt) {\n        if (!this.is_playing) {\n            return;\n        }\n        if (this._currentDelay || this._currentPlayDelay) {\n            return;\n        }\n        this.played_time += dt;\n        let index = Math.floor(this.played_time / this.duration);\n        if (!this.is_loop) {\n            if (index >= this.spriteFrameList.length) {\n                this.is_playing = false;\n                this.played_time = 0;\n                if (this.is_destroy) {\n                    this.node.destroy();\n                }\n                return;\n            }\n            this.sprite.spriteFrame = this.spriteFrameList[index];\n        } else {\n            if(index >= this.spriteFrameList.length) {\n                this.played_time -= (this.duration * this.spriteFrameList.length);\n                index -= this.spriteFrameList.length;\n                this._currentPlayDelay = (this.timeDelay > 0);\n                this.scheduleOnce(this._updatePlayTimeDelayState.bind(this), this.playTimeEndDelay);\n            }\n            this.sprite.spriteFrame = this.spriteFrameList[index];\n        }\n    }\n}"]}