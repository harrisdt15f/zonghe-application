{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Tool/assets\\Script\\Tool\\UiForms.ts"],"names":[],"mappings":";;;;;;AAEA,6CAAiD;AACjD,wCAAyC;AAEzC;;GAEG;AACH;IAUI;QAPQ,UAAK,GAAa,IAAI,CAAC;QACvB,YAAO,GAAa,IAAI,CAAC;QACzB,cAAS,GAAa,IAAI,CAAC;QAE3B,aAAQ,GAAa,IAAI,CAAC;QAC1B,aAAQ,GAAa,IAAI,CAAC;QAG9B,iBAAQ,CAAC,EAAE,CAAC,yBAAe,CAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrF,CAAC;IAED,yBAAO,GAAP;IACA,CAAC;IACD;;;OAGG;IACH,sBAAI,GAAJ,UAAK,IAAc;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAA;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;IACpD,CAAC;IAED;;;;;OAKG;IACH,sBAAI,GAAJ,UAAK,KAAc,EAAE,KAAe;QAChC,IAAG,CAAC,IAAI,CAAC,KAAK;YACV,OAAO;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAA;QACtD,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;YACnB,IAAI,CAAC,aAAa,EAAE,CAAA;QAExB,IAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAA;QAC1D,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,kBAAkB;IAClB,+BAAa,GAAb;QACI,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,IAAG,CAAC,OAAO;YACP,OAAO;QAEX,IAAI,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IAC3B,CAAC;IAEO,kCAAgB,GAAxB;QACI,IAAI,IAAI,CAAC,QAAQ,EAAC;YACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;IACL,CAAC;IAED,oCAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAG,IAAI,CAAC,QAAQ;YACZ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA;IACvE,CAAC;IAED,4BAAU,GAAV;QACI,IAAI,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,CAAA;QAClE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,sBAAI,GAAJ,UAAK,KAAc;QACf,IAAG,CAAC,IAAI,CAAC,SAAS;YACd,OAAO;QAEX,IAAI,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;QAC9D,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;QACzC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAA;IAC5B,CAAC;IAhFsB,gBAAQ,GAAa,IAAI,OAAO,EAAE,CAAC;IAiF9D,cAAC;CAlFD,AAkFC,IAAA;AAEY,QAAA,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Tool","sourcesContent":["\n\nimport {uiEventFunction} from \"../Config/uiEvent\"\nimport  {G_OnFire}  from \"../Net/OnFire\";\n\n/**\n * 窗体\n */\nclass UiForms{\n    public static readonly Instance : UiForms = new UiForms();\n\n    private _node : cc.Node = null;\n    private _uiNode :　cc.Node = null;\n    private _tipsNode : cc.Node = null;\n\n    private _showBox : cc.Node = null;\n    private _tempBox : cc.Node = null;\n\n    constructor(){\n        G_OnFire.on(uiEventFunction.secondaryInterface,this.removeFromParent.bind(this));\n    }\n\n    destroy(){\n    }\n    /**\n     * 必须在常驻场景里初始\n     * @param node tipsNode\n     */\n    init(node : cc.Node){\n        this._node = node\n        this._uiNode = node.getChildByName(\"UiNode\")\n        this._tipsNode = node.getChildByName(\"TipsNode\")\n    }\n\n    /**\n     * 展示与操作界面\n     * 具体的功能模块\n     * @param event 功能模块名称\n     * @param style 窗体类型 \n     */\n    show(event : string, style? : number){\n        if(!this._node)\n            return;\n        this._showBox = this._uiNode.getChildByName(\"ShowBox\")\n        if(this._showBox.active)\n            this.creationForms()\n\n        var formsComponent = this._showBox.getComponent(\"ShowBox\")\n        formsComponent.show(event, style);\n    }\n\n    //创建一个新窗体 进行二级页面展示\n    creationForms(){\n        var uiForms = this._showBox;\n        if(!uiForms)\n            return;\n\n        var priest = cc.instantiate(uiForms);\n        priest.active = true;\n        priest.parent = this._uiNode;\n        this._tempBox = priest;\n        this._showBox = priest;\n    }\n\n    private removeFromParent(){\n        if (this._tempBox){\n            this._tempBox.removeFromParent();\n            this._tempBox = null;\n            this._showBox = null;\n        }\n    }\n\n    setSelectPanelShow(index){\n        if(this._showBox)\n            this._showBox.getComponent(\"ShowBox\").setSelectPanelShow(index)\n    }\n\n    uiPickView(){\n        let pick : cc.Node = this._tipsNode.getChildByName(\"UIPickerView\")\n        pick.active = true;\n    }\n \n    hint(_text : string){\n        if(!this._tipsNode)\n            return;\n            \n        let tips : cc.Node = this._tipsNode.getChildByName(\"TipsNode\")\n        let _tips = tips.getComponent(\"TipsNode\")\n        _tips.textString = _text\n    }\n}\n\nexport const G_UiForms = UiForms.Instance;\n\n\n"]}