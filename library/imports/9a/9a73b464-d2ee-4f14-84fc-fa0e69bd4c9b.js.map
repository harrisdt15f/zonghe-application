{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Common/assets\\Script\\Common\\ListItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Common","sourcesContent":["/******************************************\n * @author\n * @date\n * @doc 列表Item组件.\n * 说明：\n *      1、此组件须配合List组件使用。（配套的配套的..）\n * @end\n ******************************************/\nconst { ccclass, property, disallowMultiple, menu, requireComponent, executionOrder } = cc._decorator;\n\nimport List from './List';\n\nenum SelectedType {\n    NONE = 0,\n    TOGGLE = 1,\n    SWITCH = 2,\n}\n\n@ccclass\n@disallowMultiple()\n@menu('自定义组件/List Item')\n@requireComponent(cc.Button)    //ListItem必须配合cc.Button组件或是继承自cc.Button的组件使用。\n@executionOrder(-5001)          //先于List\nexport default class ListItem extends cc.Component {\n    //图标\n    @property({ type: cc.Sprite, tooltip: CC_DEV && '图标' })\n    icon: cc.Sprite = null;\n    //标题\n    @property({ type: cc.Node, tooltip: CC_DEV && '标题' })\n    title: cc.Node = null;\n    //选择模式\n    @property({\n        type: cc.Enum(SelectedType),\n        tooltip: CC_DEV && '选择模式'\n    })\n    selectedMode: SelectedType = SelectedType.NONE;\n    //被选标志\n    @property({\n        type: cc.Node, tooltip: CC_DEV && '被选标志',\n        visible() { return this.selectedMode > SelectedType.NONE }\n    })\n    selectedFlag: cc.Node = null;\n    //被选择的SpriteFrame\n    @property({\n        type: cc.SpriteFrame, tooltip: CC_DEV && '被选择的SpriteFrame',\n        visible() { return this.selectedMode == SelectedType.SWITCH }\n    })\n    selectedSpriteFrame: cc.SpriteFrame = null;\n    //未被选择的SpriteFrame\n    _unselectedSpriteFrame: cc.SpriteFrame = null;\n    //选择\n    _selected: boolean = false;\n    set selected(val: boolean) {\n        this._selected = val;\n        if (!this.selectedFlag)\n            return;\n        switch (this.selectedMode) {\n            case SelectedType.TOGGLE:\n                this.selectedFlag.active = val;\n                break;\n            case SelectedType.SWITCH:\n                let sp: cc.Sprite = this.selectedFlag.getComponent(cc.Sprite);\n                if (sp)\n                    sp.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\n                break;\n        }\n    }\n    get selected() {\n        return this._selected;\n    }\n    //按钮组件\n    private _btnCom: any;\n    get btnCom() {\n        if (!this._btnCom)\n            this._btnCom = this.node.getComponent(cc.Button);\n        return this._btnCom;\n    }\n    //依赖的List组件\n    public list: List;\n    //是否已经注册过事件\n    private _eventReg = false;\n    //序列id\n    public listId: number;\n\n    onLoad() {\n        //没有按钮组件的话，selectedFlag无效\n        if (!this.btnCom)\n            this.selectedMode == SelectedType.NONE;\n        //有选择模式时，保存相应的东西\n        if (this.selectedMode == SelectedType.SWITCH) {\n            let com: cc.Sprite = this.selectedFlag.getComponent(cc.Sprite);\n            this._unselectedSpriteFrame = com.spriteFrame;\n        }\n    }\n\n    _registerEvent() {\n        if (this.btnCom && this.list.selectedMode > 0 && !this._eventReg) {\n            this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\n            this._eventReg = true;\n        }\n    }\n    /**\n     * 创建事件\n     * @param {cc.Component} component 组件脚本\n     * @param {string} handlerName 触发函数名称\n     * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\n     * @returns cc.Component.EventHandler\n     */\n    createEvt(component: cc.Component, handlerName: string, node: cc.Node = null) {\n        if (!component.isValid)\n            return;//有些异步加载的，节点以及销毁了。\n        component['comName'] = component['comName'] || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\n        let evt = new cc.Component.EventHandler();\n        evt.target = node || component.node;\n        evt.component = component['comName'];\n        evt.handler = handlerName;\n        return evt;\n    }\n\n    showAni(aniType: number, callFunc: Function, del: boolean) {\n        let acts: any[];\n        switch (aniType) {\n            case 0: //向上消失\n                acts = [\n                    cc.scaleTo(.2, .7),\n                    cc.moveBy(.3, 0, this.node.height * 2),\n                ];\n                break;\n            case 1: //向右消失\n                acts = [\n                    cc.scaleTo(.2, .7),\n                    cc.moveBy(.3, this.node.width * 2, 0),\n                ];\n                break;\n            case 2: //向下消失\n                acts = [\n                    cc.scaleTo(.2, .7),\n                    cc.moveBy(.3, 0, this.node.height * -2),\n                ];\n                break;\n            case 3: //向左消失\n                acts = [\n                    cc.scaleTo(.2, .7),\n                    cc.moveBy(.3, this.node.width * -2, 0),\n                ];\n                break;\n            default: //默认：缩小消失\n                acts = [\n                    cc.scaleTo(.3, .1),\n                ];\n                break;\n        }\n        if (callFunc || del) {\n            acts.push(cc.callFunc(() => {\n                if (del) {\n                    this.list._delSingleItem(this.node);\n                    for (let n: number = this.list.displayData.length - 1; n >= 0; n--) {\n                        if (this.list.displayData[n].id == this.listId) {\n                            this.list.displayData.splice(n, 1);\n                            break;\n                        }\n                    }\n                }\n                callFunc();\n            }));\n        }\n        this.node.runAction(cc.sequence(acts));\n    }\n\n    onClickThis() {\n        this.list.selectedId = this.listId;\n    }\n\n}\n"]}