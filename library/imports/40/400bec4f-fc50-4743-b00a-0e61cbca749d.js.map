{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\Hall\\SetUI/assets\\Script\\Hall\\SetUI\\CircuitPanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;;IAwCA,CAAC;IApCG,wBAAwB;IAExB,6BAAM,GAAN;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;QACnD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC5D,IAAI,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,GAAC,KAAK,CAAC,CAAC;YAC1D,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IAED,4BAAK,GAAL;IAEA,CAAC;IAED,iBAAiB;IAGjB,mCAAY,GAAZ,UAAa,KAAK;QACd,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAA;QAC3B,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;IAC9B,CAAC;IAGD,gCAAS,GAAT,UAAU,GAAG;QACT,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;QACnD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC5D,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,GAAC,KAAK,CAAC,CAAA;YAC3D,IAAI,WAAS,GAAG,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;YACjD,WAAS,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;QACD,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,GAAC,GAAG,CAAC,CAAA;QAC1D,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;QAClD,SAAS,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;IACzC,CAAC;IAvCgB,YAAY;QADhC,OAAO;OACa,YAAY,CAwChC;IAAD,mBAAC;CAxCD,AAwCC,CAxCyC,EAAE,CAAC,SAAS,GAwCrD;kBAxCoB,YAAY","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\Hall\\SetUI","sourcesContent":["\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class CircuitPanel extends cc.Component {\n\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        let formNode = this.node.getChildByName(\"formNode\")\n        for (let index = 1; index <= formNode.children.length; index++) {\n            let box = formNode.getChildByName(\"sprCircuitBox_\"+index);\n            box.on(cc.Node.EventType.TOUCH_END, this.onSelectLine.bind(this));\n        }\n        this.setToggle(1)\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n\n\n    onSelectLine(event){\n        let str = event.target.name\n        var strList = str.split(\"_\")\n        this.setToggle(strList[1])\n    }\n\n\n    setToggle(key){\n        let formNode = this.node.getChildByName(\"formNode\")\n        for (let index = 1; index <= formNode.children.length; index++) {\n            let sound = formNode.getChildByName(\"sprCircuitBox_\"+index)\n            let checkmark = sound.getChildByName(\"checkmark\")\n            checkmark.active = false;\n        }\n        let sound2 = formNode.getChildByName(\"sprCircuitBox_\"+key)\n        let checkmark = sound2.getChildByName(\"checkmark\")\n        checkmark.active = !checkmark.active;\n    }\n}\n"]}