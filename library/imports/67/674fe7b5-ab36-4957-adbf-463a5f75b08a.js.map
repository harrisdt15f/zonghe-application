{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Tool/assets\\Script\\Tool\\Sound.ts"],"names":[],"mappings":";;;;;;AAAA,qCAAsC;AAGrC;IAIG;QAEI,IAAI,WAAW,GAAG,mBAAS,CAAC,mBAAmB,EAAE,CAAA;QACjD,IAAG,WAAW,EAAC;YACX,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAA;SACnC;QAED,IAAI,YAAY,GAAG,mBAAS,CAAC,oBAAoB,EAAE,CAAA;QACnD,IAAI,YAAY,EAAC;YACb,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAA;SACtC;IAEL,CAAC;IAED,2BAAW,GAAX;QACI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE,IAAI;YAC3E,IAAG,GAAG,EAAC;gBACH,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,GAAG,EAAC,IAAI,CAAC,CAAA;gBACtC,OAAO;aACV;YACP,IAAI,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACD,CAAC;IAED,gCAAgB,GAAhB,UAAiB,MAAM;QACnB,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACxC,mBAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,0BAAU,GAAV;QACI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE,IAAI;YAChE,IAAG,GAAG,EAAC;gBACH,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAC,GAAG,EAAC,IAAI,CAAC,CAAA;gBACxC,OAAO;aACV;YACP,IAAI,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACD,CAAC;IAED,8BAAc,GAAd,UAAe,MAAM;QACjB,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACtC,mBAAS,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA;IACzC,CAAC;IA5CsB,cAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;IAgD1D,YAAC;CAlDA,AAkDA,IAAA;AAGY,QAAA,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Tool","sourcesContent":["import { G_Storage } from './Storage';\n\n\n class Sound {\n\n    public static readonly Instance : Sound = new Sound();\n\n    constructor(){\n\n        let musicVolume = G_Storage.getSoundMusicVolume()\n        if(musicVolume){\n            this.setMusicVolume(musicVolume)\n        }\n\n        let effectVolume = G_Storage.getSoundEffectVolume()\n        if (effectVolume){\n            this.setEffectsVolume(effectVolume)\n        }\n\n    }\n\n    soundEffect(){\n        cc.loader.loadRes(\"Sound/buttonSound/button\", cc.AudioClip, function (err, clip) {\n            if(err){\n                console.log(\"[ERROR]: 音效出问题\",err,clip)\n                return;\n            }\n\t\t    var audioID = cc.audioEngine.playEffect(clip, false);\n\t\t});\n    }\n\n    setEffectsVolume(volume){\n        cc.audioEngine.setEffectsVolume(volume);\n        G_Storage.setSoundEffectVolume(volume);\n    }\n\n    soundMusic(){\n        cc.loader.loadRes(\"Sound/bg/bebg\", cc.AudioClip, function (err, clip) {\n            if(err){\n                console.log(\"[ERROR]: 背景音乐出问题\",err,clip)\n                return;\n            }\n\t\t    var audioID = cc.audioEngine.playMusic(clip, true);\n\t\t});\n    }\n\n    setMusicVolume(volume){\n        cc.audioEngine.setMusicVolume(volume);\n        G_Storage.setSoundMusicVolume(volume)\n    }\n    \n\n\n}\n\n\nexport const G_Sound = Sound.Instance;"]}